/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Successful processing of image URL
 */
export class SneakerIdResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "product" })
    @Type(() => components.Product)
    product: components.Product;

    /**
     * User-defined flat object to be returned in the response.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "custom" })
    custom?: Record<string, any>;

    @SpeakeasyMetadata({ elemType: components.Product })
    @Expose({ name: "variants" })
    @Type(() => components.Product)
    variants?: components.Product[];

    /**
     * The inference confidence value.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "confidence" })
    confidence: number;

    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    @Type(() => components.MetaData)
    meta: components.MetaData;
}

export class SneakerIdResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Successful processing of image URL
     */
    @SpeakeasyMetadata()
    object?: SneakerIdResponseBody;
}
